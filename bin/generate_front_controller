#!/usr/bin/env php
<?php
declare(strict_types=1);

function resolveComposerAutoload(string $public): string {
    $dirs = explode('/', $public);
    return str_repeat('../', count($dirs)).'vendor/autoload.php';
}
$config = require 'load_config.php';

$template = <<<'php'
<?php
declare(strict_types=1);

// Convert all levels of PHP errors to ErrorExceptions
set_error_handler(function($a, $b, $c, $d) {
    throw new ErrorException($b, 0, $a, $c, $d);
}, -1);

// Handle the 'error handler threw an exception' case
set_exception_handler(function(Throwable $e) {
    error_log($e);
    header('HTTP/1.1 500 Internal Server Error');
    // Echo some sort of default failure message
});

// load autoloader
require __DIR__.'/%s';

use Firehed\API\Dispatcher;
use Zend\Diactoros\ServerRequestFactory;

$response = (new Dispatcher())
    // ->setContainer($yourDependencyInversionContainer)
    ->setEndpointList('__endpoint_list__.json')
    ->setParserList('__parser_list__.json')
    ->setRequest(ServerRequestFactory::fromGlobals())
    // ->addResponseMiddleware(function(){}) ...
    ->dispatch();

Firehed\API\renderResponse($response);
php;

// TODO: write to file
$fc = sprintf($template,
    resolveComposerAutoload($config['webroot'])
);

$dir = $config['local_project_root'].'/'.$config['webroot'];
if (!file_exists($dir)) {
    echo "Making '$dir' with 0755 permissions\n";
    mkdir($dir, 0755, true);
}
file_put_contents($dir.'/index.php', $fc);
echo "Wrote front controller to $dir/index.php\n";
