#!/usr/bin/env php
<?php
declare(strict_types=1);

use SimpleLogger\Stdout;

$config = require 'load_config.php';
$logger = new Stdout();

// Returns a series of '/..'s to get from the directory of the webroot to that
// of the project root
function resolveProjectRoot(string $webroot): string {
    $dirs = explode('/', $webroot);
    return str_repeat('/..', count($dirs));
}

$template = <<<'php'
<?php
declare(strict_types=1);

/**
 * This file automatically @generated by vendor/bin/generate_front_controller
 */
use Firehed\API\Dispatcher;
use Firehed\API\ErrorHandler;
use Psr\Log\LoggerInterface;
use Psr\Log\NullLogger;
use Zend\Diactoros\ServerRequestFactory;

// Set CWD to repo root
chdir(__DIR__.'%s');

// Composer autoloader
require 'vendor/autoload.php';

$config = %s;
if ($config && $config->has(LoggerInterface::class)) {
    $logger = $config->get(LoggerInterface::class);
} else {
    $logger = new NullLogger();
}

$handler = new ErrorHandler($logger);
// Convert all levels of PHP errors to ErrorExceptions
set_error_handler([$handler, 'handleError'], -1);

// Handle the 'error handler threw an exception' case
set_exception_handler([$handler, 'handleThrowable']);


$response = (new Dispatcher())
    ->setContainer(%s)
    ->setEndpointList('__endpoint_list__.json')
    ->setParserList('__parser_list__.json')
    ->setRequest(ServerRequestFactory::fromGlobals())
    // ->addResponseMiddleware(function(){}) ...
    ->dispatch();

Firehed\API\renderResponse($response);
php;

$container = array_key_exists('container', $config)
    ? sprintf(
        'require \'%s\'',
        $config['container']
    )
    : 'null';

// TODO: write to file
$fc = sprintf(
    $template,
    resolveProjectRoot($config['webroot']),
    $container,
    $container
);

$dir = $config['local_project_root'].'/'.$config['webroot'];
if (!file_exists($dir)) {
    $logger->info("Making '$dir' with 0755 permissions");
    mkdir($dir, 0755, true);
}
file_put_contents($dir.'/index.php', $fc);
$logger->info("Wrote front controller to $dir/index.php");
